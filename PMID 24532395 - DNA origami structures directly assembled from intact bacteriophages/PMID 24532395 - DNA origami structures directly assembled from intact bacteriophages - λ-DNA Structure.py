#!/usr/bin/env python
# encoding: utf-8
'''
Coded by B. Hogberg
Draws the design for the lambda double-rectangle, saves a caDNAno-compatible file and
computes the staple sequences.
For a 12 helices tall rectangle, the staples generated by caDNAno and this script matches
perfectly.
'''
# Python standard libraries
import string
import os
import sys
import caDNAnoFileHandlerClass as caDNAno
def caDNAnifyScaffold(fragments,VirtStrands):
    # Describing each fragment like this:
    # [ [at this helix,at this base], [coming from helix,base], [at this helix,go to this base],[continued by this helix, this base] ]
    #
    # So a list of fragments will be:
    # [ [[helix1,base1], [fromHelix1,fromBase1], [goToHelix1,goToBase1], [toHelix1, toBase1] ],
    # [[helix2,base2], [fromHelix2,fromBase2], [goToHelix2,goToBase2], [toHelix2, toBase2] ] ]
    #
    for frag in fragments:
        currStrandIndex=frag[0][0]
        nextStrandIndex=frag[2][0]
        prevStrandIndex=frag[1][0]
        if currStrandIndex%2==0:
            evenStrand=True
        else:
            evenStrand=False
            currBpIndex=frag[0][1]
            if evenStrand:
                nextBpIndex=frag[0][1]+1
            else:
                nextBpIndex=frag[0][1]-1
                prevBpIndex=frag[1][1]
                # Defining indecies to loop through if even strand left to right
                # if odd strand right to left.
                if evenStrand:
                    indecies=range(frag[0][1],frag[2][1])
                else:
                    indecies=range(frag[2][1],frag[0][1])[::-1]
                    for bp in indecies:
                        VirtStrands[currStrandIndex]
                        [currBpIndex]=[prevStrandIndex,prevBpIndex,nextStrandIndex,nextBpIndex]
                        prevStrandIndex=currStrandIndex
                        prevBpIndex=currBpIndex
                        currBpIndex=nextBpIndex
                        if evenStrand:
                            nextBpIndex=currBpIndex+1
                        else:
                            nextBpIndex=currBpIndex-1
                            # Last bp:
                            VirtStrands[frag[2][0]][frag[2][1]]=[prevStrandIndex,prevBpIndex,frag[3]
                            [0],frag[3][1]]
                            def caDNAnifyStaples(fragments,VirtStrands,printOut=False):
                                #
                                #
                                # Same as above but with changed directions of odd and even strands
                                #
                                #
                                #
                                #
                                for frag in fragments:
                                    currStrandIndex=frag[0][0]
                                    nextStrandIndex=frag[2][0]
                                    prevStrandIndex=frag[1][0]
                                    if currStrandIndex%2==0:
                                        evenStrand=True
                                        if not frag[0][1]>frag[2][1]:
                                            print ('Strand in wrong direction!')
                                            return
                                        else:
                                            evenStrand=False
                                            if not frag[0][1]<frag[2][1]:
                                                print ('Strand in wrong direction!')
                                                return
                                                currBpIndex=frag[0][1]
                                                if evenStrand:
                                                    nextBpIndex=frag[0][1]-1
                                                else:
                                                    nextBpIndex=frag[0][1]+1
                                                    prevBpIndex=frag[1][1]
                                                    # Defining indecies to loop through if even strand left to right
                                                    # if odd strand right to left.
                                                    if evenStrand:
                                                        indecies=range(frag[2][1],frag[0][1])[::-1]
                                                    else:
                                                        indecies=range(frag[0][1],frag[2][1])
                                                        for bp in indecies:
                                                            VirtStrands[currStrandIndex]
                                                            [currBpIndex]=[prevStrandIndex,prevBpIndex,nextStrandIndex,nextBpIndex]
                                                            if printOut:
                                                                print([prevStrandIndex,prevBpIndex,nextStrandIndex,nextBpIndex])
                                                                print (VirtStrands[currStrandIndex][currBpIndex])
                                                                prevStrandIndex=currStrandIndex
                                                                prevBpIndex=currBpIndex
                                                                currBpIndex=nextBpIndex
                                                                if evenStrand:
                                                                    nextBpIndex=currBpIndex-1
                                                                else:
                                                                    nextBpIndex=currBpIndex+1
                                                                    # Last bp:
                                                                    VirtStrands[frag[2][0]][frag[2][1]]=[prevStrandIndex,prevBpIndex,frag[3]
                                                                    [0],frag[3][1]]
                                                                    if printOut:
                                                                        print (VirtStrands[currStrandIndex][currBpIndex])
                                                                        ###############
                                                                        #
                                                                        # Variables
                                                                        #
                                                                        ################
                                                                        lastBpIndex=671
                                                                        lastStrandIndex=155
                                                                        lftBrPt=[0,168] # 5'-end of strand is at [helix, base]
                                                                        rghtBrPt=[lastStrandIndex,487]
                                                                        ##########################
                                                                        #
                                                                        # Some Initialization...
                                                                        #
                                                                        ##########################
                                                                        obj=caDNAno.caDNAnoFileHandler()
                                                                        obj.initializeEmpty()
                                                                        # Make empty virtual scaffold strands:
                                                                        scaffVirtStrands=[[[-1,-1,-1,-1] for i in range(lastBpIndex+1)] for s in
                                                                        range(lastStrandIndex+1)]
                                                                        # Make empty virtual staple strands:
                                                                        stapVirtStrands=[[[-1,-1,-1,-1] for i in range(lastBpIndex+1)] for s in
                                                                        range(lastStrandIndex+1)]
                                                                        ######################################################
                                                                        #
                                                                        # Scaffold Routing
                                                                        #
                                                                        ######################################################
                                                                        # Make a list of deletion positions
                                                                        bp=-1
                                                                        deletions=[]
                                                                        while bp+5*16 < lastBpIndex:
                                                                            insertedDeletions=0
                                                                            for i in range(5):
                                                                                bp=bp+16
                                                                                if i%2==0 and insertedDeletions<2:
                                                                                    deletions.append(bp)
                                                                                    insertedDeletions+=1
                                                                                    skipMaster=[0 for i in range(lastBpIndex+1)]
                                                                                    for deletion in deletions:
                                                                                        skipMaster[deletion]=1
                                                                                        skipVirtStrands=[skipMaster for i in range(lastStrandIndex+1)]
                                                                                        # First two strand fragments:
                                                                                        firstStrandFragments0=[[ [0,88], [1,88], [0,322],[1,322]],
                                                                                        [[0,408],[1,408], [0,631],[1,631]]]
                                                                                        caDNAnifyScaffold(firstStrandFragments0,scaffVirtStrands)
                                                                                        firstStrandFragments1=[[[1,631],[0,631], [1,488], [2,488]],
                                                                                        [[1,487],[2,487], [1,408], [0,408]],
                                                                                        [[1,322],[0,322], [1,168], [2,168]],
                                                                                        [[1,167],[2,167], [1,88], [0,88]]]
                                                                                        caDNAnifyScaffold(firstStrandFragments1,scaffVirtStrands)
                                                                                        # Last strand fragments:
                                                                                        lastStrandFragments=[[[lastStrandIndex,642],[lastStrandIndex-1,642], [lastStrandIndex,
                                                                                        323],[lastStrandIndex-1,323]],
                                                                                        [[lastStrandIndex,322],[lastStrandIndex-1,322], [lastStrandIndex,3],
                                                                                        [lastStrandIndex-1,3]]]
                                                                                        caDNAnifyScaffold(lastStrandFragments,scaffVirtStrands)
                                                                                        # All the other strands
                                                                                        for s in range(2,lastStrandIndex):
                                                                                            if s%2==0:
                                                                                                # Even strands
                                                                                                betweenFragments=[
                                                                                                [[s,3], [s+1,3], [s,167], [s-1,167]],
                                                                                                [[s,168], [s-1,168], [s,322], [s+1,322]],
                                                                                                [[s,323], [s+1,323], [s,487], [s-1,487]],
                                                                                                [[s,488], [s-1,488], [s,642], [s+1,642]]
                                                                                                ]
                                                                                            else: 
                                                                                                # Odd strands
                                                                                                betweenFragments=[[[s,642], [s-1,642], [s,488], [s+1,488]], [[s,487], [s+1,487], [s,323], [s-1,323]],[[s,322], [s-1,322], [s,168], [s+1,168]],[[s,167], [s+1,167], [s,3], [s-1,3]]]
                                                                                                caDNAnifyScaffold(betweenFragments,scaffVirtStrands)
                                                                                                # Insert breakpoints
                                                                                                scaffVirtStrands[lftBrPt[0]][lftBrPt[1]][0]=-1
                                                                                                scaffVirtStrands[lftBrPt[0]][lftBrPt[1]][1]=-1
                                                                                                if lftBrPt[0]%2==0:
                                                                                                    mod=-1
                                                                                                else:
                                                                                                    mod=+1
                                                                                                    scaffVirtStrands[lftBrPt[0]][lftBrPt[1]+mod][2]=-1
                                                                                                    scaffVirtStrands[lftBrPt[0]][lftBrPt[1]+mod][3]=-1
                                                                                                    scaffVirtStrands[rghtBrPt[0]][rghtBrPt[1]][0]=-1
                                                                                                    scaffVirtStrands[rghtBrPt[0]][rghtBrPt[1]][1]=-1
                                                                                                    if rghtBrPt[0]%2==0:
                                                                                                        mod=-1
                                                                                                    else:
                                                                                                        mod=+1
                                                                                                        scaffVirtStrands[rghtBrPt[0]][rghtBrPt[1]+mod][2]=-1
                                                                                                        scaffVirtStrands[rghtBrPt[0]][rghtBrPt[1]+mod][3]=-1
                                                                                                        ######################################################
                                                                                                        #
                                                                                                        # Staple strands
                                                                                                        #
                                                                                                        ######################################################
                                                                                                        # Regular ones:
                                                                                                        regularStartBases=[5*8,9*8,13*8,25*8,29*8,33*8,45*8,49*8,53*8,65*8,69*8,73*8]
                                                                                                        for startBase in regularStartBases:
                                                                                                            n=startBase

                                                                                                            topStaple=[
                                                                                                            [[0,n+23],[-1,-1],[0,n],[1,n]],
                                                                                                            [[1,n],[0,n],[1,n+7],[-1,-1]]
                                                                                                            ]
                                                                                                            caDNAnifyStaples(topStaple,stapVirtStrands)

                                                                                                            bottomStaple=[
                                                                                                            [[lastStrandIndex,n+8],[-1,-1],[lastStrandIndex,n+31],
                                                                                                            [lastStrandIndex-1,n+31]],
                                                                                                            [[lastStrandIndex-1,n+31],[lastStrandIndex,n+31],[lastStrandIndex-1,n
                                                                                                            +24],[-1,-1]]
                                                                                                            ]
                                                                                                            caDNAnifyStaples(bottomStaple,stapVirtStrands)

                                                                                                            for y in range(2,lastStrandIndex,2):
                                                                                                                n=startBase
                                                                                                                staple1=[
                                                                                                                [[y,n+23], [-1,-1], [y,n+16], [y-1,n+16]],
                                                                                                                [[y-1,n+16], [y,n+16], [y-1,n+31], [y-2,n+31]],
                                                                                                                [[y-2,n+31], [y-1,n+31], [y-2,n+24], [-1,-1]]
                                                                                                                ]
                                                                                                                caDNAnifyStaples(staple1,stapVirtStrands)

                                                                                                                staple2=[
                                                                                                                [[y-1,n+8],[-1,-1], [y-1,n+15], [y,n+15]],
                                                                                                                [[y,n+15], [y-1,n+15], [y,n], [y+1,n]],
                                                                                                                [[y+1,n], [y,n], [y+1,n+7], [-1,-1]]
                                                                                                                ]
                                                                                                                caDNAnifyStaples(staple2,stapVirtStrands)
                                                                                                                # Left edge
                                                                                                                topLeftCorner=[[[2,31],[-1,-1],[2,3],[-1,-1]]]
                                                                                                                caDNAnifyStaples(topLeftCorner,stapVirtStrands)
                                                                                                                botLeftCorner=[
                                                                                                                [[lastStrandIndex,3],[-1,-1],[lastStrandIndex,39],[lastStrandIndex-1,39]],
                                                                                                                [[lastStrandIndex-1,39],[lastStrandIndex,39],[lastStrandIndex-1,32],
                                                                                                                [-1,-1]]
                                                                                                                ]
                                                                                                                caDNAnifyStaples(botLeftCorner,stapVirtStrands)
                                                                                                                for y in range(4,lastStrandIndex,2):
                                                                                                                    n=8
                                                                                                                    snakeStaple=[
                                                                                                                    [[y,n+23], [-1,-1], [y,n+16], [y-1,n+16]],
                                                                                                                    [[y-1,n+16], [y,n+16], [y-1,n+31], [y-2,n+31]],
                                                                                                                    [[y-2,n+31], [y-1,n+31], [y-2,n+24], [-1,-1]]
                                                                                                                    ]
                                                                                                                    caDNAnifyStaples(snakeStaple,stapVirtStrands)

                                                                                                                    stapleStaple=[
                                                                                                                    [[y-1,3], [-1,-1], [y-1,23], [y,23]],
                                                                                                                    [[y,23], [y-1,23], [y,3], [-1,-1]]
                                                                                                                    ]
                                                                                                                    caDNAnifyStaples(stapleStaple,stapVirtStrands)
                                                                                                                    # At seams
                                                                                                                    seamPositions=[168,488]
                                                                                                                    for n in seamPositions:

                                                                                                                        top1 = [ [[0,n+23],[-1,-1],[0,n-8],[-1,-1]] ]
                                                                                                                        caDNAnifyStaples(top1,stapVirtStrands)

                                                                                                                        top2 = [
                                                                                                                        [[0,n-9],[-1,-1],[0,n-32],[1,n-32]],
                                                                                                                        [[1,n-32],[0,n-32],[1,n-25],[-1,-1]]
                                                                                                                        ]
                                                                                                                        caDNAnifyStaples(top2,stapVirtStrands)

                                                                                                                        bot1 = [ [[lastStrandIndex,n-24],[-1,-1],[lastStrandIndex,n+7],[-1,-1]] ]
                                                                                                                        caDNAnifyStaples(bot1,stapVirtStrands)

                                                                                                                        bot2 = [
                                                                                                                        [[lastStrandIndex,n+8],[-1,-1],[lastStrandIndex,n+31],[lastStrandIndex-1,n
                                                                                                                        +31]],
                                                                                                                        [[lastStrandIndex-1,n+31],[lastStrandIndex,n+31],[lastStrandIndex-1,n+24],
                                                                                                                        [-1,-1]]
                                                                                                                        ]
                                                                                                                        caDNAnifyStaples(bot2,stapVirtStrands)

                                                                                                                        for y in range(2,lastStrandIndex,2):
                                                                                                                            leftSnake=[
                                                                                                                            [[y-1,n-24], [-1,-1], [y-1,n-17], [y,n-17]],
                                                                                                                            [[y,n-17], [y-1,n-17], [y,n-32], [y+1,n-32]],
                                                                                                                            [[y+1,n-32], [y,n-32], [y+1,n-25], [-1,-1]]
                                                                                                                            ]
                                                                                                                            caDNAnifyStaples(leftSnake,stapVirtStrands)

                                                                                                                            leftRound=[
                                                                                                                            [[y, n+7], [-1, -1], [y, n-16], [y-1, n-16]],
                                                                                                                            [[y-1, n-16], [y, n-16], [y-1, n-9], [-1, -1]]
                                                                                                                            ]
                                                                                                                            caDNAnifyStaples(leftRound,stapVirtStrands)

                                                                                                                            rightRound=[
                                                                                                                            [[y-1,n-8],[-1,-1],[y-1,n+15],[y,n+15]],
                                                                                                                            [[y,n+15],[y-1,n+15],[y,n+8],[-1,-1]]
                                                                                                                            ]
                                                                                                                            caDNAnifyStaples(rightRound,stapVirtStrands)

                                                                                                                            rightSnake=[
                                                                                                                            [[y,n+23], [-1,-1], [y,n+16], [y-1,n+16]],
                                                                                                                            [[y-1,n+16], [y,n+16], [y-1,n+31], [y-2,n+31]],
                                                                                                                            [[y-2,n+31], [y-1,n+31], [y-2,n+24], [-1,-1]]
                                                                                                                            ]
                                                                                                                            caDNAnifyStaples(rightSnake,stapVirtStrands)
                                                                                                                            # Stitch
                                                                                                                            n=328
                                                                                                                            top1 = [ [[0,n+23],[-1,-1],[0,n-8],[-1,-1]] ]
                                                                                                                            caDNAnifyStaples(top1,stapVirtStrands)
                                                                                                                            top2 = [
                                                                                                                            [[0,n-9],[-1,-1],[0,n-32],[1,n-32]],
                                                                                                                            [[1,n-32],[0,n-32],[1,n-25],[-1,-1]]
                                                                                                                            ]
                                                                                                                            caDNAnifyStaples(top2,stapVirtStrands)
                                                                                                                            bot1 = [ [[lastStrandIndex,n-24],[-1,-1],[lastStrandIndex,n+7],[-1,-1]] ]
                                                                                                                            caDNAnifyStaples(bot1,stapVirtStrands)
                                                                                                                            bot2 = [
                                                                                                                            [[lastStrandIndex,n+8],[-1,-1],[lastStrandIndex,n+31],[lastStrandIndex-1,n+31]],
                                                                                                                            [[lastStrandIndex-1,n+31],[lastStrandIndex,n+31],[lastStrandIndex-1,n+24],
                                                                                                                            [-1,-1]]
                                                                                                                            ]
                                                                                                                            caDNAnifyStaples(bot2,stapVirtStrands)
                                                                                                                            for y in range(2,lastStrandIndex,2):
                                                                                                                                leftSnake=[
                                                                                                                                [[y-1,n-24], [-1,-1], [y-1,n-17], [y,n-17]],
                                                                                                                                [[y,n-17], [y-1,n-17], [y,n-32], [y+1,n-32]],
                                                                                                                                [[y+1,n-32], [y,n-32], [y+1,n-25], [-1,-1]]
                                                                                                                                ]
                                                                                                                                caDNAnifyStaples(leftSnake,stapVirtStrands)

                                                                                                                                leftRound=[
                                                                                                                                [[y, n-1], [-1, -1], [y, n-16], [y-1, n-16]],
                                                                                                                                [[y-1, n-16], [y, n-16], [y-1, n-1], [-1, -1]]
                                                                                                                                ]
                                                                                                                                caDNAnifyStaples(leftRound,stapVirtStrands)

                                                                                                                                rightRound=[
                                                                                                                                [[y-1,n],[-1,-1],[y-1,n+15],[y,n+15]],
                                                                                                                                [[y,n+15],[y-1,n+15],[y,n],[-1,-1]]
                                                                                                                                ]
                                                                                                                                caDNAnifyStaples(rightRound,stapVirtStrands)

                                                                                                                                rightSnake=[
                                                                                                                                [[y,n+23], [-1,-1], [y,n+16], [y-1,n+16]],
                                                                                                                                [[y-1,n+16], [y,n+16], [y-1,n+31], [y-2,n+31]],
                                                                                                                                [[y-2,n+31], [y-1,n+31], [y-2,n+24], [-1,-1]]
                                                                                                                                ]
                                                                                                                                caDNAnifyStaples(rightSnake,stapVirtStrands)

                                                                                                                                # Right edge
                                                                                                                                topRightCorner=[
                                                                                                                                [[0,642],[-1,-1],[0,616],[1,616]],
                                                                                                                                [[1,616],[0,616],[1,623],[-1,-1]]
                                                                                                                                ]
                                                                                                                                caDNAnifyStaples(topRightCorner,stapVirtStrands)
                                                                                                                                botRightCorner=[ [[lastStrandIndex,624],[-1,-1],[lastStrandIndex,642],[-1,-1]] ]
                                                                                                                                caDNAnifyStaples(botRightCorner,stapVirtStrands)
                                                                                                                                for y in range(2,lastStrandIndex,2):
                                                                                                                                    n=616
                                                                                                                                    snake=[
                                                                                                                                    [[y-1,n+8],[-1,-1], [y-1,n+15], [y,n+15]],
                                                                                                                                    [[y,n+15], [y-1,n+15], [y,n], [y+1,n]],
                                                                                                                                    [[y+1,n], [y,n], [y+1,n+7], [-1,-1]]
                                                                                                                                    ]
                                                                                                                                    caDNAnifyStaples(snake,stapVirtStrands)

                                                                                                                                    stapleStaple=[
                                                                                                                                    [[y,642],[-1,-1],[y,632],[y-1,632]],
                                                                                                                                    [[y-1,632],[y,632],[y-1,642],[-1,-1]]
                                                                                                                                    ]
                                                                                                                                    caDNAnifyStaples(stapleStaple,stapVirtStrands)

                                                                                                                                    # Erase staples at top to make room for notches.
                                                                                                                                    # Then edit the bases that needs change.
                                                                                                                                    for i in range(88):
                                                                                                                                        stapVirtStrands[0][i]=[-1,-1,-1,-1]
                                                                                                                                        stapVirtStrands[1][i]=[-1,-1,-1,-1]
                                                                                                                                        for i in range(323,408):
                                                                                                                                            stapVirtStrands[0][i]=[-1,-1,-1,-1]
                                                                                                                                            stapVirtStrands[1][i]=[-1,-1,-1,-1]
                                                                                                                                            # A
                                                                                                                                            notchChangeA=[ [[2,63],[-1,-1],[2,55],[2,54]] ]
                                                                                                                                            caDNAnifyStaples(notchChangeA,stapVirtStrands)
                                                                                                                                            # B
                                                                                                                                            stapVirtStrands[2][87]=[-1,-1,2,86]
                                                                                                                                            # C
                                                                                                                                            notchChangeB=[ [[0,103],[1,103],[0,88],[-1,-1]] ]
                                                                                                                                            caDNAnifyStaples(notchChangeB,stapVirtStrands)
                                                                                                                                            # D
                                                                                                                                            notchChangeD=[ [[0,322],[-1,-1],[0,296],[1,296]] ]
                                                                                                                                            caDNAnifyStaples(notchChangeD,stapVirtStrands)
                                                                                                                                            # E
                                                                                                                                            notchChangeE=[ [[1,312],[2,312],[1,322],[-1,-1]] ]
                                                                                                                                            caDNAnifyStaples(notchChangeE,stapVirtStrands)
                                                                                                                                            # F
                                                                                                                                            notchChangeF=[ [[2,351],[-1,-1],[2,328],[-1,-1]] ]
                                                                                                                                            caDNAnifyStaples(notchChangeF,stapVirtStrands)
                                                                                                                                            # G
                                                                                                                                            notchChangeG=[ [[2,407],[-1,-1],[2,392],[3,392]] ]
                                                                                                                                            caDNAnifyStaples(notchChangeG,stapVirtStrands)
                                                                                                                                            # H
                                                                                                                                            notchChangeH=[ [[0,423],[1,423],[0,408],[-1,-1]] ]
                                                                                                                                            caDNAnifyStaples(notchChangeH,stapVirtStrands)
                                                                                                                                            # I
                                                                                                                                            notchChangeI=[ [[2,383],[-1,-1],[2,360],[3,360]] ]
                                                                                                                                            caDNAnifyStaples(notchChangeI,stapVirtStrands)
                                                                                                                                            # J - scaffold
                                                                                                                                            for i in range(13):
                                                                                                                                                scaffVirtStrands[2][i]=[-1,-1,-1,-1]
                                                                                                                                                scaffVirtStrands[3][i]=[-1,-1,-1,-1]
                                                                                                                                                scaffVirtStrands[2][13]=[3,13,2,14]
                                                                                                                                                scaffVirtStrands[3][13]=[3,12,2,13]
                                                                                                                                                # J - staples
                                                                                                                                                for i in range(13):
                                                                                                                                                    stapVirtStrands[2][i]=[-1,-1,-1,-1]
                                                                                                                                                    stapVirtStrands[3][i]=[-1,-1,-1,-1]
                                                                                                                                                    stapVirtStrands[2][13]=[2,12,-1,-1]
                                                                                                                                                    stapVirtStrands[3][13]=[-1,-1,3,14]
                                                                                                                                                    # K - scaffold
                                                                                                                                                    for i in range(632,643):
                                                                                                                                                        scaffVirtStrands[0][i]=[-1,-1,-1,-1]
                                                                                                                                                        scaffVirtStrands[1][i]=[-1,-1,-1,-1]
                                                                                                                                                        scaffVirtStrands[0][631]=[0,630,1,631]
                                                                                                                                                        scaffVirtStrands[1][631]=[0,631,1,630]
                                                                                                                                                        # K - staples
                                                                                                                                                        for i in range(632,643):
                                                                                                                                                            stapVirtStrands[0][i]=[-1,-1,-1,-1]
                                                                                                                                                            stapVirtStrands[1][i]=[-1,-1,-1,-1]
                                                                                                                                                            stapVirtStrands[0][631]=[-1,-1,0,630]
                                                                                                                                                            stapVirtStrands[2][632]=[2,633,-1,-1]
                                                                                                                                                            ######################################################
                                                                                                                                                            #
                                                                                                                                                            # Writing caDNAno compatible file
                                                                                                                                                            #
                                                                                                                                                            ######################################################
                                                                                                                                                            for i in range(lastStrandIndex+1):

                                                                                                                                                                obj.appendStrand(num=i,scaf=scaffVirtStrands[i],stap=stapVirtStrands[i],skip=skipVirtStrands[i],row=i,col=1)
                                                                                                                                                                #obj.printBasicData()
                                                                                                                                                                obj.writeCaDNAnoFile('lambdaRectangle.json')
                                                                                                                                                                ######################################################
                                                                                                                                                                #
                                                                                                                                                                # Printing out the staple sequences
                                                                                                                                                                #
                                                                                                                                                                ######################################################
                                                                                                                                                                def reverse(sequence):
                                                                                                                                                                    """Returns the bases in reverse order"""
                                                                                                                                                                    return sequence[::-1]
                                                                                                                                                                    def complement_to(sequence):
                                                                                                                                                                        """Returns the wc-complement to the sequence"""
                                                                                                                                                                        comp = {'a':'T', 'A':'T', 'c':'G', 'C':'G', 'g':'C', 'G':'C', 't':'A', 'T':'A',
                                                                                                                                                                        'D':'D', '?':'?'}
                                                                                                                                                                        temp_complement = ''
                                                                                                                                                                        for letter in sequence:
                                                                                                                                                                            if letter in comp:
                                                                                                                                                                                temp_complement = temp_complement + comp[letter]
                                                                                                                                                                                return reverse(temp_complement)
                                                                                                                                                                                def stripped_seq(raw_sequence):
                                                                                                                                                                                    """Clean the input sequence from unnecessary characters
                                                                                                                                                                                    and makes the bases uppercase"""
                                                                                                                                                                                    uppercase = {'a':'A', 'A':'A', 'c':'C', 'C':'C', 'g':'G', 'G':'G', 't':'T', 'T':'T'}
                                                                                                                                                                                    temp_seq_ra = ''
                                                                                                                                                                                    for letter in raw_sequence:
                                                                                                                                                                                        if letter in uppercase:
                                                                                                                                                                                            temp_seq_ra = temp_seq_ra + uppercase[letter]
                                                                                                                                                                                            return temp_seq_ra
                                                                                                                                                                                            # First populate the virtual scaffol strands:
                                                                                                                                                                                            # make an empty (='?') set of virtual strands
                                                                                                                                                                                            wSequVirtStrs=[['?' for i in range(lastBpIndex+1)] for s in range(lastStrandIndex+1)]
                                                                                                                                                                                            input_file = file('LambdaForwardStrand.txt', 'r')
                                                                                                                                                                                            scaffoldLeftStr = stripped_seq(input_file.read())
                                                                                                                                                                                            input_file.close()
                                                                                                                                                                                            input_file2 = file('LambdaReverseStrand.txt','r')
                                                                                                                                                                                            scaffoldRightStr = stripped_seq(input_file2.read())
                                                                                                                                                                                            input_file2.close()
                                                                                                                                                                                            scaffoldLeft=list(scaffoldLeftStr)
                                                                                                                                                                                            scaffoldRight=list(scaffoldRightStr)
                                                                                                                                                                                            # Left Part:
                                                                                                                                                                                            lenBefore=len(scaffoldLeft)
                                                                                                                                                                                            currBase=scaffVirtStrands[lftBrPt[0]][lftBrPt[1]]
                                                                                                                                                                                            currBaseIn=lftBrPt[1]
                                                                                                                                                                                            currStrIn=lftBrPt[0]
                                                                                                                                                                                            lastPointAdded=False
                                                                                                                                                                                            while not lastPointAdded:
                                                                                                                                                                                                if skipVirtStrands[currStrIn][currBaseIn]==1:
                                                                                                                                                                                                    # Here a deletion should be added, marked by 'D'
                                                                                                                                                                                                    wSequVirtStrs[currStrIn][currBaseIn]='D'
                                                                                                                                                                                                else:
                                                                                                                                                                                                    wSequVirtStrs[currStrIn][currBaseIn]=scaffoldLeft.pop(0)
                                                                                                                                                                                                    currBaseIn=currBase[3]
                                                                                                                                                                                                    currStrIn=currBase[2]
                                                                                                                                                                                                    if currBaseIn==-1 and currStrIn==-1:
                                                                                                                                                                                                        lastPointAdded=True
                                                                                                                                                                                                    else:
                                                                                                                                                                                                        currBase=scaffVirtStrands[currStrIn][currBaseIn]
                                                                                                                                                                                                        lenAfter=len(scaffoldLeft)
                                                                                                                                                                                                        print ('In left part '+str(lenBefore-lenAfter)+' bases were added and '+str(lenAfter)+' bases are left over')
                                                                                                                                                                                                        # Right Part:
                                                                                                                                                                                                        lenBefore=len(scaffoldRight)
                                                                                                                                                                                                        currBase=scaffVirtStrands[rghtBrPt[0]][rghtBrPt[1]]
                                                                                                                                                                                                        currBaseIn=rghtBrPt[1]
                                                                                                                                                                                                        currStrIn=rghtBrPt[0]
                                                                                                                                                                                                        lastPointAdded=False
                                                                                                                                                                                                        while not lastPointAdded:
                                                                                                                                                                                                            if skipVirtStrands[currStrIn][currBaseIn]==1:
                                                                                                                                                                                                                # Here a deletion should be added, marked by 'D'
                                                                                                                                                                                                                wSequVirtStrs[currStrIn][currBaseIn]='D'
                                                                                                                                                                                                            else:
                                                                                                                                                                                                                wSequVirtStrs[currStrIn][currBaseIn]=scaffoldRight.pop(0)
                                                                                                                                                                                                                currBaseIn=currBase[3]
                                                                                                                                                                                                                currStrIn=currBase[2]
                                                                                                                                                                                                                if currBaseIn==-1 and currStrIn==-1:
                                                                                                                                                                                                                    lastPointAdded=True
                                                                                                                                                                                                                else:
                                                                                                                                                                                                                    currBase=scaffVirtStrands[currStrIn][currBaseIn]
                                                                                                                                                                                                                    lenAfter=len(scaffoldRight)
                                                                                                                                                                                                                    print ('In right part '+str(lenBefore-lenAfter)+' bases were added and '+str(lenAfter)+' bases are left over')
                                                                                                                                                                                                                    ######################################################################
                                                                                                                                                                                                                    # OUTPUT STAPLE STRANDS
                                                                                                                                                                                                                    # Go through the virtual staple strands and look for
                                                                                                                                                                                                                    # staple startpoints. Horizontally, through each of the two
                                                                                                                                                                                                                    # sub-structures.
                                                                                                                                                                                                                    ######################################################################
                                                                                                                                                                                                                    stapBcount=0
                                                                                                                                                                                                                    stapCount=0
                                                                                                                                                                                                                    output=[]
                                                                                                                                                                                                                    strippedOut=[]
                                                                                                                                                                                                                    rows=['A','B','C','D','E','F','G','H']
                                                                                                                                                                                                                    plateNum=774
                                                                                                                                                                                                                    for subStructure in range(2):
                                                                                                                                                                                                                        if subStructure==0:
                                                                                                                                                                                                                            print ('Forward strand staples starting w. index '+str(stapCount))
                                                                                                                                                                                                                            output.append(',,Forward Strand\n')
                                                                                                                                                                                                                            strtBase=0
                                                                                                                                                                                                                            endBase=323
                                                                                                                                                                                                                        else:
                                                                                                                                                                                                                            print ('Reverse strand staples starting w. index '+str(stapCount))
                                                                                                                                                                                                                            output.append(',,Reverse Strand\n')
                                                                                                                                                                                                                            strtBase=328
                                                                                                                                                                                                                            endBase=643
                                                                                                                                                                                                                            plateNum+=1
                                                                                                                                                                                                                            r=-1
                                                                                                                                                                                                                            for sI in range(lastStrandIndex+1):
                                                                                                                                                                                                                                r+=1
                                                                                                                                                                                                                                if r==8: # Reset row numbering and start new plate
                                                                                                                                                                                                                                    plateNum+=1
                                                                                                                                                                                                                                    r=0
                                                                                                                                                                                                                                    c=1 # Reset column numbering
                                                                                                                                                                                                                                for bI in range(strtBase,endBase):
                                                                                                                                                                                                                                    if stapVirtStrands[sI][bI][0]==-1 and stapVirtStrands[sI][bI][1]==-1 and stapVirtStrands[sI][bI][2]>-1:
                                                                                                                                                                                                                                        # A staple start point
                                                                                                                                                                                                                                        stapleSeq=[]
                                                                                                                                                                                                                                        currBase=stapVirtStrands[sI][bI]
                                                                                                                                                                                                                                        currBaseIn=bI
                                                                                                                                                                                                                                        currStrIn=sI
                                                                                                                                                                                                                                        lastPointAdded=False
                                                                                                                                                                                                                                    while not lastPointAdded:
                                                                                                                                                                                                                                        if skipVirtStrands[currStrIn][currBaseIn]==0: # only add bases if no
                                                                                                                                                                                                                                            deletion
                                                                                                                                                                                                                                            stapleSeq.append( complement_to(wSequVirtStrs[currStrIn]
                                                                                                                                                                                                                                            [currBaseIn]) )
                                                                                                                                                                                                                                            stapBcount+=1
                                                                                                                                                                                                                                            currBaseIn=currBase[3]
                                                                                                                                                                                                                                            currStrIn=currBase[2]
                                                                                                                                                                                                                                        if currBaseIn==-1 and currStrIn==-1:
                                                                                                                                                                                                                                            lastPointAdded=True
                                                                                                                                                                                                                                        else:
                                                                                                                                                                                                                                            currBase=stapVirtStrands[currStrIn][currBaseIn]
                                                                                                                                                                                                                                            stringoligo=''.join(stapleSeq)
                                                                                                                                                                                                                                            output.append(str(plateNum)+','+rows[r]+str(c)+','+stringoligo+'\n')
                                                                                                                                                                                                                                            strippedOut.append(stringoligo+'\n')
                                                                                                                                                                                                                                            stapCount+=1
                                                                                                                                                                                                                                            c+=1
                                                                                                                                                                                                                                            if c==14:
                                                                                                                                                                                                                                                print ('Warning, col number was too high in plate '+str(plateNum))
                                                                                                                                                                                                                                                while c<13:
                                                                                                                                                                                                                                                    # fill all columns
                                                                                                                                                                                                                                                    output.append(str(plateNum)+','+rows[r]+str(c)+','+'\n')
                                                                                                                                                                                                                                                    c+=1
                                                                                                                                                                                                                                                    # Connector staples
                                                                                                                                                                                                                                                    print ('Connector staples starting w. index '+str(stapCount))
                                                                                                                                                                                                                                                    plateNum+=1
                                                                                                                                                                                                                                                    r=0
                                                                                                                                                                                                                                                    c=0
                                                                                                                                                                                                                                                    output.append(',,Connector staples\n')
                                                                                                                                                                                                                                                    for sI in range(lastStrandIndex+1):
                                                                                                                                                                                                                                                        if stapVirtStrands[sI][327][0]==-1 and stapVirtStrands[sI][327][1]==-1 and stapVirtStrands[sI][327][2]>-1:
                                                                                                                                                                                                                                                            # A staple start point
                                                                                                                                                                                                                                                            c+=1
                                                                                                                                                                                                                                                        if c==13:
                                                                                                                                                                                                                                                            c=1
                                                                                                                                                                                                                                                            r+=1
                                                                                                                                                                                                                                                            stapleSeq=[]
                                                                                                                                                                                                                                                            currBase=stapVirtStrands[sI][327]
                                                                                                                                                                                                                                                            currBaseIn=327
                                                                                                                                                                                                                                                            currStrIn=sI
                                                                                                                                                                                                                                                            lastPointAdded=False
                                                                                                                                                                                                                                                            while not lastPointAdded:
                                                                                                                                                                                                                                                                if skipVirtStrands[currStrIn][currBaseIn]==0: # only add bases if no deletion
                                                                                                                                                                                                                                                                    stapleSeq.append( complement_to(wSequVirtStrs[currStrIn][currBaseIn]) )
                                                                                                                                                                                                                                                                    stapBcount+=1
                                                                                                                                                                                                                                                                    currBaseIn=currBase[3]
                                                                                                                                                                                                                                                                    currStrIn=currBase[2]
                                                                                                                                                                                                                                                                if currBaseIn==-1 and currStrIn==-1:
                                                                                                                                                                                                                                                                    lastPointAdded=True
                                                                                                                                                                                                                                                                else:
                                                                                                                                                                                                                                                                    currBase=stapVirtStrands[currStrIn][currBaseIn]
                                                                                                                                                                                                                                                                    stringoligo=''.join(stapleSeq)
                                                                                                                                                                                                                                                                    output.append(str(plateNum)+','+rows[r]+str(c)+','+stringoligo+'\n')
                                                                                                                                                                                                                                                                    strippedOut.append(stringoligo+'\n')
                                                                                                                                                                                                                                                                    stapCount+=1
                                                                                                                                                                                                                                                                    print ('The total number of staple bases calculated is '+str(stapBcount)+' on a total of '+str(stapCount)+' staple strands.')
                                                                                                                                                                                                                                                                    output_file=file('./LambdaStaples.cvs','w')
                                                                                                                                                                                                                                                                    output_file.write(''.join(output))
                                                                                                                                                                                                                                                                    output_file.close()
                                                                                                                                                                                                                                                                    output_file2=file('./strippedLambdaStaples.txt','w')
                                                                                                                                                                                                                                                                    output_file2.write(''.join(strippedOut))
                                                                                                                                                                                                                                                                    output_file2.close()
